# Your Solution
apiVersion: apps/v1
kind: Deployment
metadata:
  name: book-catalog
spec:
  replicas: 2  # Number of instances/pods for scalability
  selector:
    matchLabels:
      app: book-catalog
  template:
    metadata:
      labels:
        app: book-catalog
    spec:
      containers:
      - name: book-catalog
        image: ProjectPart03.azurecr.io/book_catalog:1  # ACR image
        ports:
        - containerPort: 8001
        env:
        - name: DATABASE_URL
          value: postgres://LibraryPart03:Abc2025sit722Deakin@library-project-sit722.postgres.database.azure.com:5432/postgres  # Update with correct DB URL
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-management
spec:
  replicas: 2  # Number of instances/pods for scalability
  selector:
    matchLabels:
      app: inventory-management
  template:
    metadata:
      labels:
        app: inventory-management
    spec:
      containers:
      - name: inventory-management
        image: ProjectPart03.azurecr.io/inventory_management:1  # ACR image
        ports:
        - containerPort: 8002
        env:
        - name: DATABASE_URL
          value: postgres://LibraryPart03:Abc2025sit722Deakin@library-project-sit722.postgres.database.azure.com:5432/postgres  # Update with correct DB URL
---
apiVersion: v1
kind: Service
metadata:
  name: book-catalog-service
spec:
  selector:
    app: book-catalog
  ports:
    - protocol: TCP
      port: 8001  # Expose port 8001 externally
      targetPort: 8001  # Port on the container
  type: LoadBalancer  # Ensure service is accessible outside the cluster
---
apiVersion: v1
kind: Service
metadata:
  name: inventory-management-service
spec:
  selector:
    app: inventory-management
  ports:
    - protocol: TCP
      port: 8002  # Expose port 80 externally
      targetPort: 8002  # Port on the container
  type: LoadBalancer  # Ensure service is accessible outside the cluster
